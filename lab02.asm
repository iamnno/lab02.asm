TITLE ЛР_2 
;------------------------------------------------------------------------------
;ЛР  №2
;------------------------------------------------------------------------------
; Архітектура комп'ютера
; Завдання: Прямий доступ до відеопам'яті архітектури ІА-32 (Х86) у REAL ADRESS MODE
; ВУЗ:  КНУУ "КПІ"
; Факультет: ФІОТ
; Курс: 1
; Група: ІТ-01
;------------------------------------------------------------------------------
; Автор:        Гончаренко, Доброхотова, Нікітченко
; Дата:         25/02/2020
;------------------Заголовок програми---------------
IDEAL   ; Директива - тип Асемблера tasm
MODEL small ; Директива - тип моделі пам'яті
STACK 256   ; Директива - розмір стеку в байтах
;------------------Макроси---------------
MACRO M_Init ; Початок макросу
mov ax,@data ; ax <- @data 
mov ds,ax ; ds <- ax
mov es,ax ; es <- ax
ENDM M_Init ; Кінець макросу
;------------------Початок сегменту даних---------------
DATASEG
exCode db 0

;одна лінія прямокутника
rect_line db 'C', 43h, 'o', 43h, 'm', 43h, 'p', 43h, 'u', 43h
          db 't', 43h, 'e', 43h, 'r', 43h, ' ', 43h, 'a', 43h
		  db 'r', 43h, 'c', 43h, 'h', 43h, 'i', 43h, 't', 43h
		  db 'e', 43h, 'c', 43h, 't', 43h, 'u', 43h, 'r', 43h
		  db 'e', 43h
; рядок символів для виводу на екран, парні байти - символи, непарні - атрибути
; у нашому випадку - колір фона символа червоний, а колір самого символу бірюзовий
; 4- червоний колір фонуб 3 - бірюзовий колір символів
rect_line_length=$-rect_line
; функція для визначення довжини строки

;------------------Початок сегменту коду---------------
CODESEG
Start:
M_Init
; використовуємо макрос

mov dx, 1680 ; Початок вводу прямокутника, координата верхнього лівого кута 160*у+2*х
             ; у - кількість рядків зверху, х - кількість символів зліва			 
             ; В нашому варіанті це (40,10) 160*10+2*40=1680	 
mov cx, 10 ; Лічильник ітерацій циклу
loopStart:; Мітка початку циклу
          ; Регістр сх виконується в команді movsb з префіксом rep,
		  ; тому ми спочатку зберігаємо його значення в іншому регістрі, наприклад bx
mov bx, cx ; Зберігаємо значення лічильника в іншому регістрі
mov ax, 0B800h ; 1.Сегментка адреса відеопам'яті
mov es, ax ; 2.До ЕS
 
; Налаштування SI,DI і CX для movsb
mov di, dx ; di - Початок виводу на екран
mov si, offset rect_line ; Записуємо в si наш рядок
mov cx, rect_line_length ; Число байтів на пересилання
cld; DF - вперед
rep movsb ; Пересилання
mov cx,bx ; Команда rep movsb виконана і вже регістр-лічильник сx, який виконується
          ; Для циклу вільний, отже повертаємо його значення з регустру bx назад 
add dx, 160 ; Зміщення для наступної лінії
LOOP loopstart ; виконуємо команду LOOP, яка повторюватиме блок коду, поки значення лічильника не буде 0
Exit:
mov ah, 04Ch ; 4ch - функція виходу з програми для переривання 21h
mov al, [exCode] ; Отримання коду виходу
int 21h ; Виклик функції DOS 4ch
END Start